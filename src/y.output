State 123 conflicts: 1 shift/reduce


Grammar

    0 $accept: CompUnit $end

    1 CompUnit: CompUnitList

    2 CompUnitList: FuncDef
    3             | CompUnitList FuncDef

    4 FuncDef: INT IDENT '(' FuncDefParamList ')' Block
    5        | VOID IDENT '(' FuncDefParamList ')' Block
    6        | INT IDENT '(' ')' Block
    7        | VOID IDENT '(' ')' Block

    8 FuncDefParamList: FuncDefParamList ',' FuncDefParam
    9               | FuncDefParam

   10 FuncDefParam: INT IDENT
   11           | VOID IDENT

   12 Block: '{' BlockItemList '}'

   13 Stmt: OpenStmt
   14     | ClosedStmt

   15 SimpleStmt: RETURN Exp ';'
   16           | RETURN ';'
   17           | LVal '=' Exp ';'
   18           | Block
   19           | ';'
   20           | Exp ';'
   21           | WHILE '(' Exp ')' Stmt
   22           | BREAK
   23           | CONTINUE

   24 Exp: LOrExp

   25 LOrExp: LAndExp
   26       | LOrExp OR_CONST LAndExp

   27 LAndExp: EqExp
   28        | LAndExp AND_CONST EqExp

   29 EqExp: RelExp
   30      | EqExp EQ_OP RelExp

   31 RelExp: AddExp
   32       | RelExp REL_OP AddExp

   33 AddExp: MulExp
   34       | AddExp '+' MulExp
   35       | AddExp '-' MulExp

   36 MulExp: UnaryExp
   37       | MulExp '*' UnaryExp
   38       | MulExp '/' UnaryExp
   39       | MulExp '%' UnaryExp

   40 UnaryOp: '+'
   41        | '-'
   42        | '!'

   43 PrimaryExp: '(' Exp ')'
   44           | Number
   45           | LVal

   46 UnaryExp: PrimaryExp
   47         | UnaryOp UnaryExp

   48 Number: INT_CONST

   49 Decl: ConstDecl
   50     | VarDecl

   51 ConstDecl: CONST INT ConstDefList ';'

   52 ConstDef: IDENT '=' ConstInitVal

   53 ConstInitVal: ConstExp

   54 LVal: IDENT

   55 ConstExp: Exp

   56 VarDecl: INT VarDefList ';'

   57 VarDef: IDENT
   58       | IDENT '=' InitVal

   59 InitVal: Exp

   60 ConstDefList: ConstDef
   61             | ConstDefList ',' ConstDef

   62 VarDefList: VarDef
   63           | VarDefList ',' VarDef

   64 BlockItem: Decl
   65          | Stmt

   66 BlockItemList: %empty
   67              | BlockItemList BlockItem

   68 ClosedStmt: SimpleStmt
   69           | IF '(' Exp ')' ClosedStmt ELSE ClosedStmt

   70 OpenStmt: IF '(' Exp ')' Stmt
   71         | IF '(' Exp ')' ClosedStmt ELSE OpenStmt


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 42
    '%' (37) 39
    '(' (40) 4 5 6 7 21 43 69 70 71
    ')' (41) 4 5 6 7 21 43 69 70 71
    '*' (42) 37
    '+' (43) 34 40
    ',' (44) 8 61 63
    '-' (45) 35 41
    '/' (47) 38
    ';' (59) 15 16 17 19 20 51 56
    '=' (61) 17 52 58
    '{' (123) 12
    '}' (125) 12
    error (256)
    INT (258) 4 6 10 51 56
    RETURN (259) 15 16
    AND_CONST (260) 28
    OR_CONST (261) 26
    CONST (262) 51
    IF (263) 69 70 71
    ELSE (264) 69 71
    WHILE (265) 21
    BREAK (266) 22
    CONTINUE (267) 23
    VOID (268) 5 7 11
    IDENT <str_val> (269) 4 5 6 7 10 11 52 54 57 58
    REL_OP <str_val> (270) 32
    EQ_OP <str_val> (271) 30
    INT_CONST <int_val> (272) 48


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    CompUnit (32)
        on left: 1
        on right: 0
    CompUnitList <vec_val> (33)
        on left: 2 3
        on right: 1 3
    FuncDef <ast_val> (34)
        on left: 4 5 6 7
        on right: 2 3
    FuncDefParamList <vec_val> (35)
        on left: 8 9
        on right: 4 5 8
    FuncDefParam <ast_val> (36)
        on left: 10 11
        on right: 8 9
    Block <ast_val> (37)
        on left: 12
        on right: 4 5 6 7 18
    Stmt <ast_val> (38)
        on left: 13 14
        on right: 21 65 70
    SimpleStmt <ast_val> (39)
        on left: 15 16 17 18 19 20 21 22 23
        on right: 68
    Exp <ast_val> (40)
        on left: 24
        on right: 15 17 20 21 43 55 59 69 70 71
    LOrExp <ast_val> (41)
        on left: 25 26
        on right: 24 26
    LAndExp <ast_val> (42)
        on left: 27 28
        on right: 25 26 28
    EqExp <ast_val> (43)
        on left: 29 30
        on right: 27 28 30
    RelExp <ast_val> (44)
        on left: 31 32
        on right: 29 30 32
    AddExp <ast_val> (45)
        on left: 33 34 35
        on right: 31 32 34 35
    MulExp <ast_val> (46)
        on left: 36 37 38 39
        on right: 33 34 35 37 38 39
    UnaryOp <str_val> (47)
        on left: 40 41 42
        on right: 47
    PrimaryExp <ast_val> (48)
        on left: 43 44 45
        on right: 46
    UnaryExp <ast_val> (49)
        on left: 46 47
        on right: 36 37 38 39 47
    Number <ast_val> (50)
        on left: 48
        on right: 44
    Decl <ast_val> (51)
        on left: 49 50
        on right: 64
    ConstDecl <ast_val> (52)
        on left: 51
        on right: 49
    ConstDef <ast_val> (53)
        on left: 52
        on right: 60 61
    ConstInitVal <ast_val> (54)
        on left: 53
        on right: 52
    LVal <str_val> (55)
        on left: 54
        on right: 17 45
    ConstExp <ast_val> (56)
        on left: 55
        on right: 53
    VarDecl <ast_val> (57)
        on left: 56
        on right: 50
    VarDef <ast_val> (58)
        on left: 57 58
        on right: 62 63
    InitVal <ast_val> (59)
        on left: 59
        on right: 58
    ConstDefList <vec_val> (60)
        on left: 60 61
        on right: 51 61
    VarDefList <vec_val> (61)
        on left: 62 63
        on right: 56 63
    BlockItem <ast_val> (62)
        on left: 64 65
        on right: 67
    BlockItemList <vec_val> (63)
        on left: 66 67
        on right: 12 67
    ClosedStmt <ast_val> (64)
        on left: 68 69
        on right: 14 69 71
    OpenStmt <ast_val> (65)
        on left: 70 71
        on right: 13 71


State 0

    0 $accept: . CompUnit $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    CompUnit      go to state 3
    CompUnitList  go to state 4
    FuncDef       go to state 5


State 1

    4 FuncDef: INT . IDENT '(' FuncDefParamList ')' Block
    6        | INT . IDENT '(' ')' Block

    IDENT  shift, and go to state 6


State 2

    5 FuncDef: VOID . IDENT '(' FuncDefParamList ')' Block
    7        | VOID . IDENT '(' ')' Block

    IDENT  shift, and go to state 7


State 3

    0 $accept: CompUnit . $end

    $end  shift, and go to state 8


State 4

    1 CompUnit: CompUnitList .
    3 CompUnitList: CompUnitList . FuncDef

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (CompUnit)

    FuncDef  go to state 9


State 5

    2 CompUnitList: FuncDef .

    $default  reduce using rule 2 (CompUnitList)


State 6

    4 FuncDef: INT IDENT . '(' FuncDefParamList ')' Block
    6        | INT IDENT . '(' ')' Block

    '('  shift, and go to state 10


State 7

    5 FuncDef: VOID IDENT . '(' FuncDefParamList ')' Block
    7        | VOID IDENT . '(' ')' Block

    '('  shift, and go to state 11


State 8

    0 $accept: CompUnit $end .

    $default  accept


State 9

    3 CompUnitList: CompUnitList FuncDef .

    $default  reduce using rule 3 (CompUnitList)


State 10

    4 FuncDef: INT IDENT '(' . FuncDefParamList ')' Block
    6        | INT IDENT '(' . ')' Block

    INT   shift, and go to state 12
    VOID  shift, and go to state 13
    ')'   shift, and go to state 14

    FuncDefParamList  go to state 15
    FuncDefParam      go to state 16


State 11

    5 FuncDef: VOID IDENT '(' . FuncDefParamList ')' Block
    7        | VOID IDENT '(' . ')' Block

    INT   shift, and go to state 12
    VOID  shift, and go to state 13
    ')'   shift, and go to state 17

    FuncDefParamList  go to state 18
    FuncDefParam      go to state 16


State 12

   10 FuncDefParam: INT . IDENT

    IDENT  shift, and go to state 19


State 13

   11 FuncDefParam: VOID . IDENT

    IDENT  shift, and go to state 20


State 14

    6 FuncDef: INT IDENT '(' ')' . Block

    '{'  shift, and go to state 21

    Block  go to state 22


State 15

    4 FuncDef: INT IDENT '(' FuncDefParamList . ')' Block
    8 FuncDefParamList: FuncDefParamList . ',' FuncDefParam

    ')'  shift, and go to state 23
    ','  shift, and go to state 24


State 16

    9 FuncDefParamList: FuncDefParam .

    $default  reduce using rule 9 (FuncDefParamList)


State 17

    7 FuncDef: VOID IDENT '(' ')' . Block

    '{'  shift, and go to state 21

    Block  go to state 25


State 18

    5 FuncDef: VOID IDENT '(' FuncDefParamList . ')' Block
    8 FuncDefParamList: FuncDefParamList . ',' FuncDefParam

    ')'  shift, and go to state 26
    ','  shift, and go to state 24


State 19

   10 FuncDefParam: INT IDENT .

    $default  reduce using rule 10 (FuncDefParam)


State 20

   11 FuncDefParam: VOID IDENT .

    $default  reduce using rule 11 (FuncDefParam)


State 21

   12 Block: '{' . BlockItemList '}'

    $default  reduce using rule 66 (BlockItemList)

    BlockItemList  go to state 27


State 22

    6 FuncDef: INT IDENT '(' ')' Block .

    $default  reduce using rule 6 (FuncDef)


State 23

    4 FuncDef: INT IDENT '(' FuncDefParamList ')' . Block

    '{'  shift, and go to state 21

    Block  go to state 28


State 24

    8 FuncDefParamList: FuncDefParamList ',' . FuncDefParam

    INT   shift, and go to state 12
    VOID  shift, and go to state 13

    FuncDefParam  go to state 29


State 25

    7 FuncDef: VOID IDENT '(' ')' Block .

    $default  reduce using rule 7 (FuncDef)


State 26

    5 FuncDef: VOID IDENT '(' FuncDefParamList ')' . Block

    '{'  shift, and go to state 21

    Block  go to state 30


State 27

   12 Block: '{' BlockItemList . '}'
   67 BlockItemList: BlockItemList . BlockItem

    INT        shift, and go to state 31
    RETURN     shift, and go to state 32
    CONST      shift, and go to state 33
    IF         shift, and go to state 34
    WHILE      shift, and go to state 35
    BREAK      shift, and go to state 36
    CONTINUE   shift, and go to state 37
    IDENT      shift, and go to state 38
    INT_CONST  shift, and go to state 39
    '('        shift, and go to state 40
    '{'        shift, and go to state 21
    '}'        shift, and go to state 41
    ';'        shift, and go to state 42
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    Block       go to state 46
    Stmt        go to state 47
    SimpleStmt  go to state 48
    Exp         go to state 49
    LOrExp      go to state 50
    LAndExp     go to state 51
    EqExp       go to state 52
    RelExp      go to state 53
    AddExp      go to state 54
    MulExp      go to state 55
    UnaryOp     go to state 56
    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    Number      go to state 59
    Decl        go to state 60
    ConstDecl   go to state 61
    LVal        go to state 62
    VarDecl     go to state 63
    BlockItem   go to state 64
    ClosedStmt  go to state 65
    OpenStmt    go to state 66


State 28

    4 FuncDef: INT IDENT '(' FuncDefParamList ')' Block .

    $default  reduce using rule 4 (FuncDef)


State 29

    8 FuncDefParamList: FuncDefParamList ',' FuncDefParam .

    $default  reduce using rule 8 (FuncDefParamList)


State 30

    5 FuncDef: VOID IDENT '(' FuncDefParamList ')' Block .

    $default  reduce using rule 5 (FuncDef)


State 31

   56 VarDecl: INT . VarDefList ';'

    IDENT  shift, and go to state 67

    VarDef      go to state 68
    VarDefList  go to state 69


State 32

   15 SimpleStmt: RETURN . Exp ';'
   16           | RETURN . ';'

    IDENT      shift, and go to state 38
    INT_CONST  shift, and go to state 39
    '('        shift, and go to state 40
    ';'        shift, and go to state 70
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    Exp         go to state 71
    LOrExp      go to state 50
    LAndExp     go to state 51
    EqExp       go to state 52
    RelExp      go to state 53
    AddExp      go to state 54
    MulExp      go to state 55
    UnaryOp     go to state 56
    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    Number      go to state 59
    LVal        go to state 72


State 33

   51 ConstDecl: CONST . INT ConstDefList ';'

    INT  shift, and go to state 73


State 34

   69 ClosedStmt: IF . '(' Exp ')' ClosedStmt ELSE ClosedStmt
   70 OpenStmt: IF . '(' Exp ')' Stmt
   71         | IF . '(' Exp ')' ClosedStmt ELSE OpenStmt

    '('  shift, and go to state 74


State 35

   21 SimpleStmt: WHILE . '(' Exp ')' Stmt

    '('  shift, and go to state 75


State 36

   22 SimpleStmt: BREAK .

    $default  reduce using rule 22 (SimpleStmt)


State 37

   23 SimpleStmt: CONTINUE .

    $default  reduce using rule 23 (SimpleStmt)


State 38

   54 LVal: IDENT .

    $default  reduce using rule 54 (LVal)


State 39

   48 Number: INT_CONST .

    $default  reduce using rule 48 (Number)


State 40

   43 PrimaryExp: '(' . Exp ')'

    IDENT      shift, and go to state 38
    INT_CONST  shift, and go to state 39
    '('        shift, and go to state 40
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    Exp         go to state 76
    LOrExp      go to state 50
    LAndExp     go to state 51
    EqExp       go to state 52
    RelExp      go to state 53
    AddExp      go to state 54
    MulExp      go to state 55
    UnaryOp     go to state 56
    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    Number      go to state 59
    LVal        go to state 72


State 41

   12 Block: '{' BlockItemList '}' .

    $default  reduce using rule 12 (Block)


State 42

   19 SimpleStmt: ';' .

    $default  reduce using rule 19 (SimpleStmt)


State 43

   40 UnaryOp: '+' .

    $default  reduce using rule 40 (UnaryOp)


State 44

   41 UnaryOp: '-' .

    $default  reduce using rule 41 (UnaryOp)


State 45

   42 UnaryOp: '!' .

    $default  reduce using rule 42 (UnaryOp)


State 46

   18 SimpleStmt: Block .

    $default  reduce using rule 18 (SimpleStmt)


State 47

   65 BlockItem: Stmt .

    $default  reduce using rule 65 (BlockItem)


State 48

   68 ClosedStmt: SimpleStmt .

    $default  reduce using rule 68 (ClosedStmt)


State 49

   20 SimpleStmt: Exp . ';'

    ';'  shift, and go to state 77


State 50

   24 Exp: LOrExp .
   26 LOrExp: LOrExp . OR_CONST LAndExp

    OR_CONST  shift, and go to state 78

    $default  reduce using rule 24 (Exp)


State 51

   25 LOrExp: LAndExp .
   28 LAndExp: LAndExp . AND_CONST EqExp

    AND_CONST  shift, and go to state 79

    $default  reduce using rule 25 (LOrExp)


State 52

   27 LAndExp: EqExp .
   30 EqExp: EqExp . EQ_OP RelExp

    EQ_OP  shift, and go to state 80

    $default  reduce using rule 27 (LAndExp)


State 53

   29 EqExp: RelExp .
   32 RelExp: RelExp . REL_OP AddExp

    REL_OP  shift, and go to state 81

    $default  reduce using rule 29 (EqExp)


State 54

   31 RelExp: AddExp .
   34 AddExp: AddExp . '+' MulExp
   35       | AddExp . '-' MulExp

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83

    $default  reduce using rule 31 (RelExp)


State 55

   33 AddExp: MulExp .
   37 MulExp: MulExp . '*' UnaryExp
   38       | MulExp . '/' UnaryExp
   39       | MulExp . '%' UnaryExp

    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '%'  shift, and go to state 86

    $default  reduce using rule 33 (AddExp)


State 56

   47 UnaryExp: UnaryOp . UnaryExp

    IDENT      shift, and go to state 38
    INT_CONST  shift, and go to state 39
    '('        shift, and go to state 40
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    UnaryOp     go to state 56
    PrimaryExp  go to state 57
    UnaryExp    go to state 87
    Number      go to state 59
    LVal        go to state 72


State 57

   46 UnaryExp: PrimaryExp .

    $default  reduce using rule 46 (UnaryExp)


State 58

   36 MulExp: UnaryExp .

    $default  reduce using rule 36 (MulExp)


State 59

   44 PrimaryExp: Number .

    $default  reduce using rule 44 (PrimaryExp)


State 60

   64 BlockItem: Decl .

    $default  reduce using rule 64 (BlockItem)


State 61

   49 Decl: ConstDecl .

    $default  reduce using rule 49 (Decl)


State 62

   17 SimpleStmt: LVal . '=' Exp ';'
   45 PrimaryExp: LVal .

    '='  shift, and go to state 88

    $default  reduce using rule 45 (PrimaryExp)


State 63

   50 Decl: VarDecl .

    $default  reduce using rule 50 (Decl)


State 64

   67 BlockItemList: BlockItemList BlockItem .

    $default  reduce using rule 67 (BlockItemList)


State 65

   14 Stmt: ClosedStmt .

    $default  reduce using rule 14 (Stmt)


State 66

   13 Stmt: OpenStmt .

    $default  reduce using rule 13 (Stmt)


State 67

   57 VarDef: IDENT .
   58       | IDENT . '=' InitVal

    '='  shift, and go to state 89

    $default  reduce using rule 57 (VarDef)


State 68

   62 VarDefList: VarDef .

    $default  reduce using rule 62 (VarDefList)


State 69

   56 VarDecl: INT VarDefList . ';'
   63 VarDefList: VarDefList . ',' VarDef

    ','  shift, and go to state 90
    ';'  shift, and go to state 91


State 70

   16 SimpleStmt: RETURN ';' .

    $default  reduce using rule 16 (SimpleStmt)


State 71

   15 SimpleStmt: RETURN Exp . ';'

    ';'  shift, and go to state 92


State 72

   45 PrimaryExp: LVal .

    $default  reduce using rule 45 (PrimaryExp)


State 73

   51 ConstDecl: CONST INT . ConstDefList ';'

    IDENT  shift, and go to state 93

    ConstDef      go to state 94
    ConstDefList  go to state 95


State 74

   69 ClosedStmt: IF '(' . Exp ')' ClosedStmt ELSE ClosedStmt
   70 OpenStmt: IF '(' . Exp ')' Stmt
   71         | IF '(' . Exp ')' ClosedStmt ELSE OpenStmt

    IDENT      shift, and go to state 38
    INT_CONST  shift, and go to state 39
    '('        shift, and go to state 40
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    Exp         go to state 96
    LOrExp      go to state 50
    LAndExp     go to state 51
    EqExp       go to state 52
    RelExp      go to state 53
    AddExp      go to state 54
    MulExp      go to state 55
    UnaryOp     go to state 56
    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    Number      go to state 59
    LVal        go to state 72


State 75

   21 SimpleStmt: WHILE '(' . Exp ')' Stmt

    IDENT      shift, and go to state 38
    INT_CONST  shift, and go to state 39
    '('        shift, and go to state 40
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    Exp         go to state 97
    LOrExp      go to state 50
    LAndExp     go to state 51
    EqExp       go to state 52
    RelExp      go to state 53
    AddExp      go to state 54
    MulExp      go to state 55
    UnaryOp     go to state 56
    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    Number      go to state 59
    LVal        go to state 72


State 76

   43 PrimaryExp: '(' Exp . ')'

    ')'  shift, and go to state 98


State 77

   20 SimpleStmt: Exp ';' .

    $default  reduce using rule 20 (SimpleStmt)


State 78

   26 LOrExp: LOrExp OR_CONST . LAndExp

    IDENT      shift, and go to state 38
    INT_CONST  shift, and go to state 39
    '('        shift, and go to state 40
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    LAndExp     go to state 99
    EqExp       go to state 52
    RelExp      go to state 53
    AddExp      go to state 54
    MulExp      go to state 55
    UnaryOp     go to state 56
    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    Number      go to state 59
    LVal        go to state 72


State 79

   28 LAndExp: LAndExp AND_CONST . EqExp

    IDENT      shift, and go to state 38
    INT_CONST  shift, and go to state 39
    '('        shift, and go to state 40
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    EqExp       go to state 100
    RelExp      go to state 53
    AddExp      go to state 54
    MulExp      go to state 55
    UnaryOp     go to state 56
    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    Number      go to state 59
    LVal        go to state 72


State 80

   30 EqExp: EqExp EQ_OP . RelExp

    IDENT      shift, and go to state 38
    INT_CONST  shift, and go to state 39
    '('        shift, and go to state 40
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    RelExp      go to state 101
    AddExp      go to state 54
    MulExp      go to state 55
    UnaryOp     go to state 56
    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    Number      go to state 59
    LVal        go to state 72


State 81

   32 RelExp: RelExp REL_OP . AddExp

    IDENT      shift, and go to state 38
    INT_CONST  shift, and go to state 39
    '('        shift, and go to state 40
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    AddExp      go to state 102
    MulExp      go to state 55
    UnaryOp     go to state 56
    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    Number      go to state 59
    LVal        go to state 72


State 82

   34 AddExp: AddExp '+' . MulExp

    IDENT      shift, and go to state 38
    INT_CONST  shift, and go to state 39
    '('        shift, and go to state 40
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    MulExp      go to state 103
    UnaryOp     go to state 56
    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    Number      go to state 59
    LVal        go to state 72


State 83

   35 AddExp: AddExp '-' . MulExp

    IDENT      shift, and go to state 38
    INT_CONST  shift, and go to state 39
    '('        shift, and go to state 40
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    MulExp      go to state 104
    UnaryOp     go to state 56
    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    Number      go to state 59
    LVal        go to state 72


State 84

   37 MulExp: MulExp '*' . UnaryExp

    IDENT      shift, and go to state 38
    INT_CONST  shift, and go to state 39
    '('        shift, and go to state 40
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    UnaryOp     go to state 56
    PrimaryExp  go to state 57
    UnaryExp    go to state 105
    Number      go to state 59
    LVal        go to state 72


State 85

   38 MulExp: MulExp '/' . UnaryExp

    IDENT      shift, and go to state 38
    INT_CONST  shift, and go to state 39
    '('        shift, and go to state 40
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    UnaryOp     go to state 56
    PrimaryExp  go to state 57
    UnaryExp    go to state 106
    Number      go to state 59
    LVal        go to state 72


State 86

   39 MulExp: MulExp '%' . UnaryExp

    IDENT      shift, and go to state 38
    INT_CONST  shift, and go to state 39
    '('        shift, and go to state 40
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    UnaryOp     go to state 56
    PrimaryExp  go to state 57
    UnaryExp    go to state 107
    Number      go to state 59
    LVal        go to state 72


State 87

   47 UnaryExp: UnaryOp UnaryExp .

    $default  reduce using rule 47 (UnaryExp)


State 88

   17 SimpleStmt: LVal '=' . Exp ';'

    IDENT      shift, and go to state 38
    INT_CONST  shift, and go to state 39
    '('        shift, and go to state 40
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    Exp         go to state 108
    LOrExp      go to state 50
    LAndExp     go to state 51
    EqExp       go to state 52
    RelExp      go to state 53
    AddExp      go to state 54
    MulExp      go to state 55
    UnaryOp     go to state 56
    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    Number      go to state 59
    LVal        go to state 72


State 89

   58 VarDef: IDENT '=' . InitVal

    IDENT      shift, and go to state 38
    INT_CONST  shift, and go to state 39
    '('        shift, and go to state 40
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    Exp         go to state 109
    LOrExp      go to state 50
    LAndExp     go to state 51
    EqExp       go to state 52
    RelExp      go to state 53
    AddExp      go to state 54
    MulExp      go to state 55
    UnaryOp     go to state 56
    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    Number      go to state 59
    LVal        go to state 72
    InitVal     go to state 110


State 90

   63 VarDefList: VarDefList ',' . VarDef

    IDENT  shift, and go to state 67

    VarDef  go to state 111


State 91

   56 VarDecl: INT VarDefList ';' .

    $default  reduce using rule 56 (VarDecl)


State 92

   15 SimpleStmt: RETURN Exp ';' .

    $default  reduce using rule 15 (SimpleStmt)


State 93

   52 ConstDef: IDENT . '=' ConstInitVal

    '='  shift, and go to state 112


State 94

   60 ConstDefList: ConstDef .

    $default  reduce using rule 60 (ConstDefList)


State 95

   51 ConstDecl: CONST INT ConstDefList . ';'
   61 ConstDefList: ConstDefList . ',' ConstDef

    ','  shift, and go to state 113
    ';'  shift, and go to state 114


State 96

   69 ClosedStmt: IF '(' Exp . ')' ClosedStmt ELSE ClosedStmt
   70 OpenStmt: IF '(' Exp . ')' Stmt
   71         | IF '(' Exp . ')' ClosedStmt ELSE OpenStmt

    ')'  shift, and go to state 115


State 97

   21 SimpleStmt: WHILE '(' Exp . ')' Stmt

    ')'  shift, and go to state 116


State 98

   43 PrimaryExp: '(' Exp ')' .

    $default  reduce using rule 43 (PrimaryExp)


State 99

   26 LOrExp: LOrExp OR_CONST LAndExp .
   28 LAndExp: LAndExp . AND_CONST EqExp

    AND_CONST  shift, and go to state 79

    $default  reduce using rule 26 (LOrExp)


State 100

   28 LAndExp: LAndExp AND_CONST EqExp .
   30 EqExp: EqExp . EQ_OP RelExp

    EQ_OP  shift, and go to state 80

    $default  reduce using rule 28 (LAndExp)


State 101

   30 EqExp: EqExp EQ_OP RelExp .
   32 RelExp: RelExp . REL_OP AddExp

    REL_OP  shift, and go to state 81

    $default  reduce using rule 30 (EqExp)


State 102

   32 RelExp: RelExp REL_OP AddExp .
   34 AddExp: AddExp . '+' MulExp
   35       | AddExp . '-' MulExp

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83

    $default  reduce using rule 32 (RelExp)


State 103

   34 AddExp: AddExp '+' MulExp .
   37 MulExp: MulExp . '*' UnaryExp
   38       | MulExp . '/' UnaryExp
   39       | MulExp . '%' UnaryExp

    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '%'  shift, and go to state 86

    $default  reduce using rule 34 (AddExp)


State 104

   35 AddExp: AddExp '-' MulExp .
   37 MulExp: MulExp . '*' UnaryExp
   38       | MulExp . '/' UnaryExp
   39       | MulExp . '%' UnaryExp

    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '%'  shift, and go to state 86

    $default  reduce using rule 35 (AddExp)


State 105

   37 MulExp: MulExp '*' UnaryExp .

    $default  reduce using rule 37 (MulExp)


State 106

   38 MulExp: MulExp '/' UnaryExp .

    $default  reduce using rule 38 (MulExp)


State 107

   39 MulExp: MulExp '%' UnaryExp .

    $default  reduce using rule 39 (MulExp)


State 108

   17 SimpleStmt: LVal '=' Exp . ';'

    ';'  shift, and go to state 117


State 109

   59 InitVal: Exp .

    $default  reduce using rule 59 (InitVal)


State 110

   58 VarDef: IDENT '=' InitVal .

    $default  reduce using rule 58 (VarDef)


State 111

   63 VarDefList: VarDefList ',' VarDef .

    $default  reduce using rule 63 (VarDefList)


State 112

   52 ConstDef: IDENT '=' . ConstInitVal

    IDENT      shift, and go to state 38
    INT_CONST  shift, and go to state 39
    '('        shift, and go to state 40
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    Exp           go to state 118
    LOrExp        go to state 50
    LAndExp       go to state 51
    EqExp         go to state 52
    RelExp        go to state 53
    AddExp        go to state 54
    MulExp        go to state 55
    UnaryOp       go to state 56
    PrimaryExp    go to state 57
    UnaryExp      go to state 58
    Number        go to state 59
    ConstInitVal  go to state 119
    LVal          go to state 72
    ConstExp      go to state 120


State 113

   61 ConstDefList: ConstDefList ',' . ConstDef

    IDENT  shift, and go to state 93

    ConstDef  go to state 121


State 114

   51 ConstDecl: CONST INT ConstDefList ';' .

    $default  reduce using rule 51 (ConstDecl)


State 115

   69 ClosedStmt: IF '(' Exp ')' . ClosedStmt ELSE ClosedStmt
   70 OpenStmt: IF '(' Exp ')' . Stmt
   71         | IF '(' Exp ')' . ClosedStmt ELSE OpenStmt

    RETURN     shift, and go to state 32
    IF         shift, and go to state 34
    WHILE      shift, and go to state 35
    BREAK      shift, and go to state 36
    CONTINUE   shift, and go to state 37
    IDENT      shift, and go to state 38
    INT_CONST  shift, and go to state 39
    '('        shift, and go to state 40
    '{'        shift, and go to state 21
    ';'        shift, and go to state 42
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    Block       go to state 46
    Stmt        go to state 122
    SimpleStmt  go to state 48
    Exp         go to state 49
    LOrExp      go to state 50
    LAndExp     go to state 51
    EqExp       go to state 52
    RelExp      go to state 53
    AddExp      go to state 54
    MulExp      go to state 55
    UnaryOp     go to state 56
    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    Number      go to state 59
    LVal        go to state 62
    ClosedStmt  go to state 123
    OpenStmt    go to state 66


State 116

   21 SimpleStmt: WHILE '(' Exp ')' . Stmt

    RETURN     shift, and go to state 32
    IF         shift, and go to state 34
    WHILE      shift, and go to state 35
    BREAK      shift, and go to state 36
    CONTINUE   shift, and go to state 37
    IDENT      shift, and go to state 38
    INT_CONST  shift, and go to state 39
    '('        shift, and go to state 40
    '{'        shift, and go to state 21
    ';'        shift, and go to state 42
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    Block       go to state 46
    Stmt        go to state 124
    SimpleStmt  go to state 48
    Exp         go to state 49
    LOrExp      go to state 50
    LAndExp     go to state 51
    EqExp       go to state 52
    RelExp      go to state 53
    AddExp      go to state 54
    MulExp      go to state 55
    UnaryOp     go to state 56
    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    Number      go to state 59
    LVal        go to state 62
    ClosedStmt  go to state 65
    OpenStmt    go to state 66


State 117

   17 SimpleStmt: LVal '=' Exp ';' .

    $default  reduce using rule 17 (SimpleStmt)


State 118

   55 ConstExp: Exp .

    $default  reduce using rule 55 (ConstExp)


State 119

   52 ConstDef: IDENT '=' ConstInitVal .

    $default  reduce using rule 52 (ConstDef)


State 120

   53 ConstInitVal: ConstExp .

    $default  reduce using rule 53 (ConstInitVal)


State 121

   61 ConstDefList: ConstDefList ',' ConstDef .

    $default  reduce using rule 61 (ConstDefList)


State 122

   70 OpenStmt: IF '(' Exp ')' Stmt .

    $default  reduce using rule 70 (OpenStmt)


State 123

   14 Stmt: ClosedStmt .
   69 ClosedStmt: IF '(' Exp ')' ClosedStmt . ELSE ClosedStmt
   71 OpenStmt: IF '(' Exp ')' ClosedStmt . ELSE OpenStmt

    ELSE  shift, and go to state 125

    ELSE      [reduce using rule 14 (Stmt)]
    $default  reduce using rule 14 (Stmt)


State 124

   21 SimpleStmt: WHILE '(' Exp ')' Stmt .

    $default  reduce using rule 21 (SimpleStmt)


State 125

   69 ClosedStmt: IF '(' Exp ')' ClosedStmt ELSE . ClosedStmt
   71 OpenStmt: IF '(' Exp ')' ClosedStmt ELSE . OpenStmt

    RETURN     shift, and go to state 32
    IF         shift, and go to state 34
    WHILE      shift, and go to state 35
    BREAK      shift, and go to state 36
    CONTINUE   shift, and go to state 37
    IDENT      shift, and go to state 38
    INT_CONST  shift, and go to state 39
    '('        shift, and go to state 40
    '{'        shift, and go to state 21
    ';'        shift, and go to state 42
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '!'        shift, and go to state 45

    Block       go to state 46
    SimpleStmt  go to state 48
    Exp         go to state 49
    LOrExp      go to state 50
    LAndExp     go to state 51
    EqExp       go to state 52
    RelExp      go to state 53
    AddExp      go to state 54
    MulExp      go to state 55
    UnaryOp     go to state 56
    PrimaryExp  go to state 57
    UnaryExp    go to state 58
    Number      go to state 59
    LVal        go to state 62
    ClosedStmt  go to state 126
    OpenStmt    go to state 127


State 126

   69 ClosedStmt: IF '(' Exp ')' ClosedStmt ELSE ClosedStmt .

    $default  reduce using rule 69 (ClosedStmt)


State 127

   71 OpenStmt: IF '(' Exp ')' ClosedStmt ELSE OpenStmt .

    $default  reduce using rule 71 (OpenStmt)
